<Window x:Name="Window"
		x:Class="MagicInput.Views.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
		xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
		xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:tb="http://www.hardcodet.net/taskbar"
		xmlns:vm="clr-namespace:MagicInput.ViewModels"
		xmlns:v="clr-namespace:MagicInput.Views"
		mc:Ignorable="d"
		d:DataContext="{d:DesignInstance vm:MainViewModel}"
		Style="{StaticResource {x:Type Window}}"
		Title="MagicInput"
		Height="520"
		Width="640"
		SourceInitialized="Window_SourceInitialized">
	<Window.Resources>
		<v:TypeDisplayNameConverter x:Key="TypeDisplayNameConverter" />
	</Window.Resources>
	<Window.DataContext>
		<vm:MainViewModel />
	</Window.DataContext>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Unloaded">
			<l:DataContextDisposeAction />
		</i:EventTrigger>
		<l:InteractionMessageTrigger Messenger="{Binding Messenger}"
									 MessageKey="KeyDeviceSetSettingsViewModel">
			<l:TransitionInteractionMessageAction WindowType="v:KeyDeviceSetSettingsWindow"
												  Mode="Modal" />
		</l:InteractionMessageTrigger>
		<l:InteractionMessageTrigger Messenger="{Binding Messenger}"
									 MessageKey="Show">
			<l:LivetCallMethodAction MethodTarget="{Binding ElementName=Window}"
									 MethodName="Show" />
			<l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False">
				<l:DirectInteractionMessage>
					<l:WindowActionMessage Action="Normal" />
				</l:DirectInteractionMessage>
			</l:WindowInteractionMessageAction>
			<l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False">
				<l:DirectInteractionMessage>
					<l:WindowActionMessage Action="Active" />
				</l:DirectInteractionMessage>
			</l:WindowInteractionMessageAction>
		</l:InteractionMessageTrigger>
		<l:InteractionMessageTrigger Messenger="{Binding Messenger}"
									 MessageKey="Close">
			<l:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False">
				<l:DirectInteractionMessage>
					<l:WindowActionMessage Action="Close" />
				</l:DirectInteractionMessage>
			</l:WindowInteractionMessageAction>
		</l:InteractionMessageTrigger>
	</i:Interaction.Triggers>
	<Grid Margin="8">
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<tb:TaskbarIcon IconSource="../App.ico"
						DoubleClickCommand="{v:MethodCommand Show}">
			<tb:TaskbarIcon.ContextMenu>
				<ContextMenu>
					<ContextMenu.ItemsSource>
						<CompositeCollection>
							<MenuItem Header="設定(_S)..."
									  Command="{v:MethodCommand Show}" />
							<Separator />
							<MenuItem Header="終了(_X)"
									  Command="{v:MethodCommand Close}" />
						</CompositeCollection>
					</ContextMenu.ItemsSource>
				</ContextMenu>
			</tb:TaskbarIcon.ContextMenu>
		</tb:TaskbarIcon>
		<TextBlock Margin="0,0,0,8"
				   Text="デバイス セット:" />
		<Grid Grid.Row="1"
			  Width="144"
			  Margin="0,0,8,8">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>
			<Grid Margin="0,0,0,8">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ComboBox ItemsSource="{Binding DeviceSets}"
						  SelectedItem="{Binding SelectedDeviceSet}"
						  Margin="0,0,8,0">
					<ComboBox.ItemContainerStyle>
						<Style TargetType="ComboBoxItem"
							   BasedOn="{StaticResource {x:Type ComboBoxItem}}">
							<Setter Property="ContextMenu">
								<Setter.Value>
									<ContextMenu>
										<MenuItem Header="設定(_S)..."
												  Command="{v:MethodCommand ShowSettings}" />
										<Separator />
										<MenuItem Header="削除(_D)"
												  Command="{v:MethodCommand Main.RemoveDeviceSet}"
												  CommandParameter="{Binding}"
												  IsEnabled="{Binding Main.DeviceSets.Count, Converter={StaticResource CompareConverter}, ConverterParameter=&gt;1}" />
									</ContextMenu>
								</Setter.Value>
							</Setter>
						</Style>
					</ComboBox.ItemContainerStyle>
					<ComboBox.ItemTemplate>
						<DataTemplate DataType="{x:Type vm:KeyDeviceSetViewModel}">
							<TextBlock Text="{Binding DeviceSet.Name}" />
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
				<Button Grid.Column="1"
						MinWidth="0"
						Padding="2"
						ToolTip="新しいデバイス セット"
						Content="{StaticResource PlusPath}"
						Command="{v:MethodCommand AddDeviceSet}" />
			</Grid>
			<TextBlock Grid.Row="1"
					   Margin="0,0,0,8"
					   TextTrimming="CharacterEllipsis">
				<Run Text="{Binding SelectedDeviceSet.DeviceSet.Name, Mode=OneWay}" /><Run Text=" のプロファイル:" />
			</TextBlock>
			<ContentControl Grid.Row="2"
							Content="{Binding SelectedDeviceSet}">
				<ContentControl.ContentTemplate>
					<DataTemplate DataType="{x:Type vm:KeyDeviceSetViewModel}">
						<ListBox ItemsSource="{Binding Profiles}"
								 SelectedItem="{Binding SelectedProfile}"
								 IsSynchronizedWithCurrentItem="True">
							<i:Interaction.Behaviors>
								<v:ItemDragDropBehavior ModelCollection="{Binding DeviceSet.Profiles}" />
							</i:Interaction.Behaviors>
							<ListBox.ItemContainerStyle>
								<Style TargetType="ListBoxItem">
									<Setter Property="ContextMenu">
										<Setter.Value>
											<ContextMenu>
												<MenuItem Header="設定(_S)..."
														  Command="{v:MethodCommand ShowSettings}" />
												<Separator />
												<MenuItem Header="削除(_D)"
														  Command="{v:MethodCommand DeviceSet.RemoveProfile}"
														  CommandParameter="{Binding}"
														  IsEnabled="{Binding DeviceSet.Profiles.Count, Converter={StaticResource CompareConverter}, ConverterParameter=&gt;1}" />
											</ContextMenu>
										</Setter.Value>
									</Setter>
								</Style>
							</ListBox.ItemContainerStyle>
							<ListBox.ItemTemplate>
								<DataTemplate DataType="{x:Type vm:KeyProfileViewModel}">
									<TextBlock Text="{Binding Profile.Name}" />
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</DataTemplate>
				</ContentControl.ContentTemplate>
			</ContentControl>
		</Grid>
		<Grid Grid.Column="1"
			  Margin="0,0,0,8">
			<TextBlock>
				<Run Text="{Binding SelectedDeviceSet.SelectedProfile.Profile.Name, Mode=OneWay}" /><Run Text=" のキーマップ:" />
			</TextBlock>
		</Grid>
		<ContentControl Grid.Row="1"
						Grid.Column="1"
						Margin="0,0,0,8"
						Content="{Binding SelectedDeviceSet.SelectedProfile}">
			<ContentControl.ContentTemplate>
				<DataTemplate DataType="{x:Type vm:KeyProfileViewModel}">
					<TabControl ItemsSource="{Binding KeyMaps}"
								SelectedItem="{Binding CurrentKeyMap, Mode=OneWay}"
								IsSynchronizedWithCurrentItem="True">
						<TabControl.ItemContainerStyleSelector>
							<v:NewItemPlaceholderStyleSelector>
								<v:NewItemPlaceholderStyleSelector.PlaceholderStyle>
									<Style TargetType="TabItem">
										<Setter Property="ToolTip"
												Value="新しいキーマップ" />
									</Style>
								</v:NewItemPlaceholderStyleSelector.PlaceholderStyle>
								<v:NewItemPlaceholderStyleSelector.ItemStyle>
									<Style TargetType="TabItem">
										<Setter Property="ContextMenu">
											<Setter.Value>
												<ContextMenu>
													<MenuItem Header="名前の変更(_M)">
														<i:Interaction.Triggers>
															<i:EventTrigger EventName="Click">
																<ei:ChangePropertyAction TargetObject="{Binding}"
																						 PropertyName="IsChangingName"
																						 Value="True" />
															</i:EventTrigger>
														</i:Interaction.Triggers>
													</MenuItem>
													<Separator />
													<MenuItem Header="削除(_D)"
															  Command="{v:MethodCommand Profile.RemoveKeyMap}"
															  CommandParameter="{Binding}"
															  IsEnabled="{Binding Profile.KeyMaps.Count, Converter={StaticResource CompareConverter}, ConverterParameter=&gt;1}" />
												</ContextMenu>
											</Setter.Value>
										</Setter>
									</Style>
								</v:NewItemPlaceholderStyleSelector.ItemStyle>
							</v:NewItemPlaceholderStyleSelector>
						</TabControl.ItemContainerStyleSelector>
						<TabControl.ItemTemplateSelector>
							<v:NewItemPlaceholderTemplateSelector>
								<v:NewItemPlaceholderTemplateSelector.PlaceholderTemplate>
									<DataTemplate>
										<ContentControl Content="{StaticResource PlusPath}"
														Margin="-2,2,-2,0">
											<i:Interaction.Triggers>
												<l:LivetDataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}"
																	Value="True">
													<l:LivetCallMethodAction MethodTarget="{Binding DataContext.SelectedDeviceSet.SelectedProfile, ElementName=Window}"
																			 MethodName="AddKeyMap" />
												</l:LivetDataTrigger>
											</i:Interaction.Triggers>
										</ContentControl>
									</DataTemplate>
								</v:NewItemPlaceholderTemplateSelector.PlaceholderTemplate>
								<v:NewItemPlaceholderTemplateSelector.ItemTemplate>
									<DataTemplate DataType="{x:Type vm:KeyMapViewModel}">
										<Grid>
											<TextBlock Text="{Binding Name}" />
											<TextBox Margin="-4,-1,-4,-2"
													 Visibility="{Binding IsChangingName, Converter={StaticResource BooleanToVisibilityConverter}}">
												<i:Interaction.Triggers>
													<l:LivetDataTrigger Binding="{Binding IsChangingName}"
																		Value="True">
														<ei:ChangePropertyAction PropertyName="Text"
																				 Value="{Binding Name}" />
														<l:LivetCallMethodAction MethodTarget="{Binding RelativeSource={RelativeSource AncestorType=TextBox}}"
																				 MethodName="SelectAll" />
														<l:SetFocusAction />
													</l:LivetDataTrigger>
													<i:EventTrigger EventName="LostFocus">
														<ei:ChangePropertyAction TargetObject="{Binding}"
																				 PropertyName="IsChangingName"
																				 Value="False" />
													</i:EventTrigger>
													<ei:KeyTrigger Key="Escape"
																   ActiveOnFocus="True">
														<ei:ChangePropertyAction TargetObject="{Binding}"
																				 PropertyName="IsChangingName"
																				 Value="False" />
													</ei:KeyTrigger>
													<ei:KeyTrigger Key="Enter"
																   ActiveOnFocus="True">
														<ei:ChangePropertyAction TargetObject="{Binding}"
																				 PropertyName="Name"
																				 Value="{Binding Text, RelativeSource={RelativeSource AncestorType=TextBox}}" />
														<ei:ChangePropertyAction TargetObject="{Binding}"
																				 PropertyName="IsChangingName"
																				 Value="False" />
													</ei:KeyTrigger>
												</i:Interaction.Triggers>
											</TextBox>
										</Grid>
									</DataTemplate>
								</v:NewItemPlaceholderTemplateSelector.ItemTemplate>
							</v:NewItemPlaceholderTemplateSelector>
						</TabControl.ItemTemplateSelector>
						<TabControl.ContentTemplateSelector>
							<v:NewItemPlaceholderTemplateSelector>
								<v:NewItemPlaceholderTemplateSelector.ItemTemplate>
									<DataTemplate DataType="{x:Type vm:KeyMapViewModel}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="216" />
												<ColumnDefinition />
											</Grid.ColumnDefinitions>
											<Grid.Resources>
												<CollectionViewSource x:Key="BehaviorsCollectionViewSource"
																	  IsLiveGroupingRequested="True"
																	  Source="{Binding Behaviors}">
													<CollectionViewSource.LiveGroupingProperties>
														Behavior.Device
													</CollectionViewSource.LiveGroupingProperties>
													<CollectionViewSource.GroupDescriptions>
														<PropertyGroupDescription PropertyName="Behavior.Device" />
													</CollectionViewSource.GroupDescriptions>
												</CollectionViewSource>
											</Grid.Resources>
											<ListView Name="BehaviorsListView"
													  Margin="0,0,8,0"
													  ItemsSource="{Binding Source={StaticResource BehaviorsCollectionViewSource}}"
													  SelectedItem="{Binding SelectedBehavior}"
													  IsSynchronizedWithCurrentItem="True">
												<ListView.ItemContainerStyle>
													<Style TargetType="ListViewItem">
														<Setter Property="Padding"
																Value="1" />
													</Style>
												</ListView.ItemContainerStyle>
												<ListView.ItemTemplate>
													<DataTemplate DataType="{x:Type vm:KeyBehaviorViewModel}">
														<Grid>
															<i:Interaction.Triggers>
																<i:EventTrigger EventName="Loaded">
																	<l:LivetCallMethodAction MethodTarget="{Binding}"
																							 MethodName="Load"
																							 MethodParameter="{Binding RelativeSource={RelativeSource Self}}" />
																</i:EventTrigger>
																<i:EventTrigger EventName="Unloaded">
																	<l:DataContextDisposeAction />
																</i:EventTrigger>
															</i:Interaction.Triggers>
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto" />
																<ColumnDefinition />
															</Grid.ColumnDefinitions>
															<Grid.RowDefinitions>
																<RowDefinition Height="Auto" />
																<RowDefinition />
															</Grid.RowDefinitions>
															<Border Name="Border"
																	CornerRadius="4"
																	BorderThickness="2"
																	BorderBrush="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
																	MinWidth="32"
																	Height="32"
																	Margin="0,0,4,0"
																	Padding="2"
																	Grid.RowSpan="2">
																<TextBlock Name="KeyName"
																		   Text="{Binding Behavior.Key.ShortName}"
																		   FontSize="13.5"
																		   HorizontalAlignment="Center"
																		   VerticalAlignment="Center" />
															</Border>
															<TextBlock Text="{Binding Behavior.Name}"
																	   Grid.Column="1" />
															<TextBlock Text="{Binding Behavior}"
																	   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
																	   Grid.Column="1"
																	   Grid.Row="1" />
														</Grid>
														<DataTemplate.Triggers>
															<DataTrigger Binding="{Binding Behavior.IsDown}"
																		 Value="True">
																<Setter TargetName="Border"
																		Property="BorderBrush"
																		Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
																<Setter TargetName="KeyName"
																		Property="Foreground"
																		Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
															</DataTrigger>
														</DataTemplate.Triggers>
													</DataTemplate>
												</ListView.ItemTemplate>
												<ListView.GroupStyle>
													<GroupStyle>
														<GroupStyle.HeaderTemplate>
															<DataTemplate>
																<TextBlock Text="{Binding Name.Name}"
																		   FontWeight="SemiBold"
																		   Margin="1" />
															</DataTemplate>
														</GroupStyle.HeaderTemplate>
														<GroupStyle.ContainerStyle>
															<Style TargetType="GroupItem">
																<Setter Property="Margin"
																		Value="0,0,0,8" />
																<Setter Property="Template">
																	<Setter.Value>
																		<ControlTemplate TargetType="GroupItem">
																			<StackPanel>
																				<ContentPresenter x:Name="PART_Header" />
																				<ItemsPresenter x:Name="ItemsPresenter" />
																			</StackPanel>
																		</ControlTemplate>
																	</Setter.Value>
																</Setter>
															</Style>
														</GroupStyle.ContainerStyle>
													</GroupStyle>
												</ListView.GroupStyle>
											</ListView>
											<Grid Grid.Column="1"
												  DataContext="{Binding SelectedItem, ElementName=BehaviorsListView}">
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="Auto" />
													<ColumnDefinition />
												</Grid.ColumnDefinitions>
												<Grid.RowDefinitions>
													<RowDefinition Height="Auto" />
													<RowDefinition />
												</Grid.RowDefinitions>
												<ComboBox Margin="0,0,0,8"
														  Grid.ColumnSpan="2"
														  ItemsSource="{Binding Behavior.Key.SupportedTypes}"
														  SelectedItem="{Binding BehaviorType}">
													<ComboBox.ItemTemplate>
														<DataTemplate>
															<TextBlock Text="{Binding Converter={StaticResource TypeDisplayNameConverter}}" />
														</DataTemplate>
													</ComboBox.ItemTemplate>
												</ComboBox>
												<ContentControl Grid.Row="1"
																Grid.ColumnSpan="2"
																Content="{Binding}">
													<ContentControl.Resources>
														<DataTemplate DataType="{x:Type vm:KeyBehaviorViewModel}">
															<TextBlock Text="切り替え前のキーマップ、もしくは既定のキー動作にフォールバックします。"
																	   TextWrapping="Wrap" />
														</DataTemplate>
														<DataTemplate DataType="{x:Type vm:SequenceBehaviorViewModel}">
															<v:SequenceBehaviorView />
														</DataTemplate>
														<DataTemplate DataType="{x:Type vm:MoveWithSequenceBehaviorViewModel}">
															<v:MoveWithSequenceBehaviorView />
														</DataTemplate>
														<DataTemplate DataType="{x:Type vm:SwitchKeyMapBehaviorViewModel}">
															<v:SwitchKeyMapBehaviorView />
														</DataTemplate>
													</ContentControl.Resources>
												</ContentControl>
											</Grid>
										</Grid>
									</DataTemplate>
								</v:NewItemPlaceholderTemplateSelector.ItemTemplate>
							</v:NewItemPlaceholderTemplateSelector>
						</TabControl.ContentTemplateSelector>
					</TabControl>
				</DataTemplate>
			</ContentControl.ContentTemplate>
		</ContentControl>
		<StackPanel Grid.Row="2"
					Orientation="Horizontal">
			<Button MinWidth="0"
					Padding="2"
					ToolTip="新しいプロファイル"
					Content="{StaticResource PlusPath}"
					Command="{v:MethodCommand SelectedDeviceSet.AddProfile}" />
		</StackPanel>
		<StackPanel Grid.Row="2"
					Grid.Column="1"
					Orientation="Horizontal"
					HorizontalAlignment="Right">
			<Button Content="OK">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<l:LivetCallMethodAction MethodTarget="{Binding Model}"
												 MethodName="Save" />
						<ei:ChangePropertyAction TargetObject="{Binding ElementName=Window}"
												 PropertyName="Visibility"
												 Value="Collapsed" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
		</StackPanel>
	</Grid>
</Window>
