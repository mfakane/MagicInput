<Window x:Class="MagicInput.Views.KeyDeviceSetSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:in="clr-namespace:MagicInput.Input;assembly=MagicInput.Input"
        xmlns:vm="clr-namespace:MagicInput.ViewModels"
        xmlns:v="clr-namespace:MagicInput.Views"
        mc:Ignorable="d"
		d:DataContext="{d:DesignInstance Type=vm:KeyDeviceSetSettingsViewModel}"
		Style="{StaticResource {x:Type Window}}"
		Title="{Binding DeviceSet.Name, StringFormat={}{0} のプロパティ}"
		Height="580"
		Width="560"
		ShowInTaskbar="False"
		ResizeMode="NoResize"
		WindowStartupLocation="CenterOwner">
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Activated">
			<ei:ChangePropertyAction TargetObject="{Binding}"
									 PropertyName="IsWindowActive"
									 Value="True" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Deactivated">
			<ei:ChangePropertyAction TargetObject="{Binding}"
									 PropertyName="IsWindowActive"
									 Value="False" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<Grid Margin="8">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" />
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<Label Content="デバイスセット名: " />
		<TextBox Grid.Column="1"
				 Text="{Binding DeviceSet.Name, UpdateSourceTrigger=PropertyChanged}"
				 Margin="8,0,0,8" />
		<TabControl Grid.ColumnSpan="2"
					Grid.Row="1"
					Margin="0,0,0,8">
			<TabItem Header="デバイス">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="196" />
						<ColumnDefinition />
					</Grid.ColumnDefinitions>
					<Label Content="デバイス一覧:"
						   Margin="0,0,0,4" />
					<ListBox Name="DevicesListBox"
							 Grid.Row="1"
							 IsSynchronizedWithCurrentItem="True"
							 ItemsSource="{Binding Devices}">
						<i:Interaction.Behaviors>
							<v:ItemDragDropBehavior />
						</i:Interaction.Behaviors>
						<ListBox.ItemContainerStyle>
							<Style TargetType="ListBoxItem">
								<Setter Property="IsSelected"
										Value="{Binding IsSelected}" />
								<Setter Property="Padding"
										Value="1" />
								<Setter Property="ContextMenu">
									<Setter.Value>
										<ContextMenu>
											<MenuItem Header="削除(_D)"
													  Command="{v:MethodCommand DeviceSet.RemoveDevice}"
													  CommandParameter="{Binding}" />
										</ContextMenu>
									</Setter.Value>
								</Setter>
							</Style>
						</ListBox.ItemContainerStyle>
						<ListBox.ItemTemplate>
							<DataTemplate DataType="{x:Type vm:KeyDeviceSettingsViewModel}">
								<StackPanel Orientation="Horizontal">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Loaded">
											<l:LivetCallMethodAction MethodTarget="{Binding}"
																	 MethodName="Load"
																	 MethodParameter="{Binding RelativeSource={RelativeSource Self}}" />
										</i:EventTrigger>
										<i:EventTrigger EventName="Unloaded">
											<l:DataContextDisposeAction />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<CheckBox IsChecked="{Binding IsChecked}" />
									<TextBlock Margin="4,-1,0,0"
											   Text="{Binding Name}" />
								</StackPanel>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<StackPanel Grid.Row="2"
								Margin="0,8,0,0"
								Orientation="Horizontal">
						<Button Name="AddDeviceButton"
								MinWidth="0"
								Padding="2"
								ToolTip="新しいデバイス"
								Content="{StaticResource PlusPath}"
								Command="{v:MethodCommand AddDevice}" />
					</StackPanel>
					<ContentControl Grid.Column="1"
									Grid.RowSpan="2"
									Margin="8,0,0,0"
									Content="{Binding SelectedItem, ElementName=DevicesListBox}"
									IsEnabled="{Binding Converter={StaticResource CompareConverter}, ConverterParameter=!null}">
						<ContentControl.ContentTemplate>
							<DataTemplate DataType="{x:Type vm:KeyDeviceSettingsViewModel}">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<Grid.ColumnDefinitions>
										<ColumnDefinition />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<StackPanel Grid.ColumnSpan="2">
										<Label Content="デバイス名:"
											   Margin="0,0,0,4" />
										<TextBox Margin="0,0,0,8"
												 Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />

										<Label Content="物理デバイス:"
											   Margin="0,0,0,4" />
										<ComboBox Margin="0,0,0,8"
												  ItemsSource="{Binding DataContext.AvailablePhysicalDevices, RelativeSource={RelativeSource AncestorType=Window}}"
												  SelectedItem="{Binding PhysicalDevice}">
											<ComboBox.ItemTemplate>
												<DataTemplate DataType="{x:Type in:KeyPhysicalDevice}">
													<StackPanel>
														<TextBlock Text="{Binding}" />
														<TextBlock Text="{Binding Description}"
																   Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
													</StackPanel>
												</DataTemplate>
											</ComboBox.ItemTemplate>
										</ComboBox>

										<Label Content="使用するキー:"
											   Margin="0,0,0,4" />
									</StackPanel>
									<TextBox Text="ここにキー入力して追加"
											 Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"
											 Margin="0,0,0,8"
											 Grid.ColumnSpan="2"
											 Grid.Row="1">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="GotFocus">
												<ei:ChangePropertyAction TargetObject="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
																		 PropertyName="IsKeyAddMode"
																		 Value="True" />
												<ei:ChangePropertyAction PropertyName="Text"
																		 Value="{x:Null}" />
											</i:EventTrigger>
											<i:EventTrigger EventName="LostFocus">
												<ei:ChangePropertyAction TargetObject="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
																		 PropertyName="IsKeyAddMode"
																		 Value="False" />
												<ei:ChangePropertyAction PropertyName="Text"
																		 Value="ここにキー入力して追加" />
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</TextBox>
									<ListBox Name="KeysListBox"
											 Grid.Row="2"
											 IsSynchronizedWithCurrentItem="True"
											 SelectedItem="{Binding SelectedKey}"
											 ItemsSource="{Binding Keys}">
										<i:Interaction.Behaviors>
											<v:ItemDragDropBehavior />
										</i:Interaction.Behaviors>
										<ListBox.ItemTemplate>
											<DataTemplate DataType="{x:Type in:KeyInput}">
												<StackPanel Orientation="Horizontal">
													<TextBlock Text="{Binding DisplayCode}"
															   Width="24" />
													<TextBlock Text="{Binding}" />
												</StackPanel>
											</DataTemplate>
										</ListBox.ItemTemplate>
									</ListBox>
									<StackPanel Grid.Row="2"
												Grid.Column="1"
												Margin="8,0,0,0"
												IsEnabled="{Binding SelectedItem, ElementName=KeysListBox, Converter={StaticResource CompareConverter}, ConverterParameter=!null}">
										<Button Content="削除"
												Margin="0,0,0,8"
												Command="{v:MethodCommand RemoveKey}"
												CommandParameter="{Binding SelectedItem, ElementName=KeysListBox}" />
										<Button Content="上へ"
												Margin="0,0,0,8"
												Command="{v:MethodCommand MoveKeyUp}"
												CommandParameter="{Binding SelectedItem, ElementName=KeysListBox}" />
										<Button Content="下へ"
												Command="{v:MethodCommand MoveKeyDown}"
												CommandParameter="{Binding SelectedItem, ElementName=KeysListBox}" />
									</StackPanel>
								</Grid>
							</DataTemplate>
						</ContentControl.ContentTemplate>
					</ContentControl>
				</Grid>
			</TabItem>
			<TabItem Header="プロファイル">
				<i:Interaction.Triggers>
					<l:LivetDataTrigger Binding="{Binding InitiallySelectedProfile}"
										Comparison="NotEqual"
										Value="{x:Null}">
						<ei:ChangePropertyAction PropertyName="IsSelected"
												 Value="True" />
					</l:LivetDataTrigger>
				</i:Interaction.Triggers>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					<DataGrid Name="ProfilesDataGrid"
							  SelectionMode="Single"
							  IsSynchronizedWithCurrentItem="True"
							  ItemsSource="{Binding Profiles}">
						<i:Interaction.Behaviors>
							<v:ItemDragDropBehavior />
						</i:Interaction.Behaviors>
						<DataGrid.Columns>
							<DataGridTextColumn Header="プロファイル名"
												Width="160"
												Binding="{Binding Name}" />
							<DataGridTextColumn Header="対象プロセス名"
												Width="128"
												Binding="{Binding TargetProcessName}" />
							<DataGridTextColumn Header="対象ウィンドウ タイトル"
												Width="128"
												Binding="{Binding TargetWindowTitle}" />
						</DataGrid.Columns>
					</DataGrid>
					<StackPanel Grid.Column="1"
								Margin="8,0,0,0">
						<Button Content="追加"
								Margin="0,0,0,8"
								Command="{v:MethodCommand AddProfile}" />
						<StackPanel IsEnabled="{Binding SelectedItem, ElementName=ProfilesDataGrid, Converter={StaticResource CompareConverter}, ConverterParameter=!null}">
							<Button Content="削除"
									Margin="0,0,0,8"
									Command="{v:MethodCommand RemoveProfile}"
									CommandParameter="{Binding SelectedItem, ElementName=ProfilesDataGrid}"
									IsEnabled="{Binding Profiles.Count, Converter={StaticResource CompareConverter}, ConverterParameter=&gt;1}" />
							<Button Content="上へ"
									Margin="0,0,0,8"
									Command="{v:MethodCommand MoveProfileUp}"
									CommandParameter="{Binding SelectedItem, ElementName=ProfilesDataGrid}" />
							<Button Content="下へ"
									Command="{v:MethodCommand MoveProfileDown}"
									CommandParameter="{Binding SelectedItem, ElementName=ProfilesDataGrid}" />
						</StackPanel>
					</StackPanel>
					<Grid Grid.Row="1"
						  Grid.ColumnSpan="2"
						  Margin="0,8,0,0"
						  DataContext="{Binding SelectedItem, ElementName=ProfilesDataGrid}"
						  d:DataContext="{d:DesignInstance vm:KeyProfileSettingsViewModel}"
						  IsEnabled="{Binding SelectedItem, ElementName=ProfilesDataGrid, Converter={StaticResource CompareConverter}, ConverterParameter=!null}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Label Content="プロファイル名:" />
						<TextBox Grid.Column="1"
								 Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
								 Margin="8,0,0,8" />
						<GroupBox Header="自動切り替えの設定"
								  Grid.Row="1"
								  Grid.ColumnSpan="2">
							<Grid Margin="4,8,4,4">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="Auto" />
								</Grid.RowDefinitions>
								<Label Content="プロセス名:" />
								<TextBox Grid.Column="1"
										 Text="{Binding TargetProcessName, UpdateSourceTrigger=PropertyChanged}"
										 Margin="8,0,0,8" />
								<ComboBox Grid.Column="2"
										  SelectedValue="{Binding TargetProcessNameMatchMethod}"
										  SelectedValuePath="Tag"
										  Margin="8,0,0,8"
										  Width="80">
									<ComboBoxItem Content="無視"
												  Tag="{x:Static in:TextMatchMethod.Ignore}" />
									<ComboBoxItem Content="部分一致"
												  Tag="{x:Static in:TextMatchMethod.Contains}" />
									<ComboBoxItem Content="完全一致"
												  Tag="{x:Static in:TextMatchMethod.Exact}" />
									<ComboBoxItem Content="正規表現"
												  Tag="{x:Static in:TextMatchMethod.Regex}" />
								</ComboBox>

								<Label Content="ウィンドウ タイトル:"
									   Grid.Row="1" />
								<TextBox Grid.Column="1"
										 Grid.Row="1"
										 Text="{Binding TargetWindowTitle, UpdateSourceTrigger=PropertyChanged}"
										 Margin="8,0,0,0" />
								<ComboBox Grid.Column="2"
										  Grid.Row="1"
										  SelectedValue="{Binding TargetWindowTitleMatchMethod}"
										  SelectedValuePath="Tag"
										  Margin="8,0,0,0"
										  Width="80">
									<ComboBoxItem Content="無視"
												  Tag="{x:Static in:TextMatchMethod.Ignore}" />
									<ComboBoxItem Content="部分一致"
												  Tag="{x:Static in:TextMatchMethod.Contains}" />
									<ComboBoxItem Content="完全一致"
												  Tag="{x:Static in:TextMatchMethod.Exact}" />
									<ComboBoxItem Content="正規表現"
												  Tag="{x:Static in:TextMatchMethod.Regex}" />
								</ComboBox>
							</Grid>
						</GroupBox>
					</Grid>
				</Grid>
			</TabItem>
		</TabControl>
		<StackPanel Grid.Row="2"
					Grid.ColumnSpan="3"
					Orientation="Horizontal"
					HorizontalAlignment="Right">
			<Button Content="OK"
					IsDefault="True"
					Margin="0,0,8,0">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<l:LivetCallMethodAction MethodTarget="{Binding}"
												 MethodName="Apply" />
						<ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
												 PropertyName="DialogResult"
												 Value="True" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
			<Button Content="キャンセル"
					IsCancel="True">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
												 PropertyName="DialogResult"
												 Value="False" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</Button>
		</StackPanel>
	</Grid>
</Window>
